// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Project {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  slug        String
  company     Company @relation(fields: [companyId], references: [id])
  companyId   Int
}

model Company {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  Project     Project[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String       @id @default(cuid())
  name           String? // name form auth provider don't change
  email          String?      @unique
  hashedPassword String?
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
  role           Role         @default(NONE)
  active         Boolean      @default(true)
  profile        UserProfile?
  skills         Skill[]      @relation("UserSkills")
  userProfileId  Int?
  UserSkill      UserSkill[]
}

enum Role {
  JOB_SEEKER
  EMPLOYEE
  ADMIN
  TESTER
  NONE
}

model UserProfile {
  id                Int     @id @default(autoincrement())
  userId            String  @unique
  user              User    @relation(fields: [userId], references: [id])
  professionalTitle String?
  about             String?
  displayName       String?
  country           String?
  timezone          String?
  city              String?
}

model Skill {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  users     User[]      @relation("UserSkills")
  UserSkill UserSkill[]
}

model UserSkill {
  id      Int    @id @default(autoincrement())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  skill   Skill  @relation(fields: [skillId], references: [id])
  skillId Int
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  description String   @db.Text
  status      Status   @default(OPEN)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Status {
  OPEN
  IN_PROGRESS
  CLOSED
}
